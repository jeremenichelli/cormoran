(function(root,factory){"use strict";if(typeof define==="function"&&define.amd){define(function(){return factory(root)})}else if(typeof exports==="object"){module.exports=factory}else{root.cormoran=factory(root)}})(this,function(){"use strict";var cName,cNumber,query,cormoran={},_doc=document,ref=_doc.getElementsByTagName("script")[0]||_doc.head||_doc.body;cormoran.get=function(url){return new Promise(function(resolve,reject){if(typeof url!=="string"){reject("Invalid url")}var script=_doc.createElement("script"),scope=window.cormoran,scopeQuery="cormoran.",callbackId=cName+cNumber;cNumber++;function onScriptLoaded(){scope[callbackId]=null;script.parentNode.removeChild(script)}scope[callbackId]=function(data){resolve(data);onScriptLoaded()};script.onerror=function(error){reject(error);onScriptLoaded()};script.src=url+query+"="+scopeQuery+callbackId;ref.parentNode.insertBefore(script,ref)})};cormoran.naming=function(str){if(typeof str!=="string"){throw new Error("Callback name must be a string")}else{cName=str;cNumber=0;return cormoran}};cormoran.query=function(str){if(typeof str!=="string"){throw new Error("Query name must be a string")}else{query=str;return cormoran}};cormoran.naming("cormoranCallback");cormoran.query("?callback");return cormoran});
